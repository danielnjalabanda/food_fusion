<?php
require 'config.php'; // creates $conn

// Validate recipe_id
if (!isset($_GET['recipe_id']) || !is_numeric($_GET['recipe_id'])) {
    http_response_code(400);
    echo "Invalid recipe id.";
    exit;
}

$recipe_id = intval($_GET['recipe_id']);

// Fetch recipe by ID
$stmt = $conn->prepare("SELECT r.*, u.username AS author_name FROM recipes r LEFT JOIN users u ON r.user_id = u.id WHERE r.id = ?");
if ($stmt === false) {
    error_log("Prepare failed in download_recipe: " . $conn->error);
    http_response_code(500);
    echo "Server error.";
    exit;
}
$stmt->bind_param("i", $recipe_id);
$stmt->execute();
$result = $stmt->get_result();

if (!$result || $result->num_rows === 0) {
    http_response_code(404);
    echo "Recipe not found.";
    $stmt->close();
    exit;
}

$recipe = $result->fetch_assoc();
$stmt->close();

// Build HTML for PDF
$siteTitle = 'FoodFusion';
$title = htmlspecialchars($recipe['title']);
$author = htmlspecialchars($recipe['author_name'] ?? 'FoodFusion');
$ingredients = nl2br(htmlspecialchars($recipe['ingredients']));
$instructions = nl2br(htmlspecialchars($recipe['instructions']));
$prep_time = intval($recipe['prep_time']);
$cook_time = intval($recipe['cook_time']);
$servings = intval($recipe['servings']);
$difficulty = htmlspecialchars($recipe['difficulty']);
$cuisine_type = htmlspecialchars($recipe['cuisine_type']);
$dietary_tags = htmlspecialchars($recipe['dietary_tags']);
$imagePath = '';
if (!empty($recipe['image'])) {
    $candidate = __DIR__ . '/assets/images/recipes/' . $recipe['image'];
    if (file_exists($candidate)) {
        // For embedding in Dompdf, use absolute path
        $imagePath = $candidate;
    }
}

// Minimal inline CSS for PDF
$css = '
<style>
body { font-family: DejaVu Sans, Arial, sans-serif; color: #222; }
.header { text-align: center; margin-bottom: 18px; }
h1 { margin: 0 0 6px 0; font-size: 22px; }
.meta { color: #666; font-size: 12px; margin-bottom: 12px; }
.section { margin-bottom: 12px; }
.section h3 { margin-bottom: 6px; font-size: 16px; }
.ingredients, .instructions { font-size: 13px; line-height: 1.4; }
.recipe-image { width: 100%; max-width: 520px; height: auto; margin: 8px auto; display: block; border-radius: 6px; }
.footer { font-size: 11px; color: #888; margin-top: 20px; text-align: center; }
</style>
';

$html = '<!doctype html><html><head><meta charset="utf-8">' . $css . '</head><body>';
$html .= '<div class="header"><h1>' . $title . '</h1>';
$html .= '<div class="meta">By ' . $author . ' • Servings: ' . $servings . ' • Difficulty: ' . $difficulty . ' • Cuisine: ' . $cuisine_type . '</div></div>';

if ($imagePath) {
    // Dompdf supports local image paths if configured; we'll include an <img> tag with file:// prefix for Dompdf
    $imgSrc = 'file://' . realpath($imagePath);
    $html .= '<img class="recipe-image" src="' . $imgSrc . '" alt="' . $title . '">';
}

$html .= '<div class="section"><h3>Ingredients</h3><div class="ingredients">' . $ingredients . '</div></div>';
$html .= '<div class="section"><h3>Instructions</h3><div class="instructions">' . $instructions . '</div></div>';
if ($prep_time || $cook_time) {
    $html .= '<div class="section"><h3>Times</h3><div class="meta">Prep: ' . ($prep_time ? $prep_time . ' mins' : 'N/A') . ' • Cook: ' . ($cook_time ? $cook_time . ' mins' : 'N/A') . '</div></div>';
}
if (!empty($dietary_tags)) {
    $html .= '<div class="section"><h3>Dietary Tags</h3><div class="meta">' . $dietary_tags . '</div></div>';
}

$html .= '<div class="footer">Generated by ' . htmlspecialchars($siteTitle) . ' • ' . date('Y-m-d') . '</div>';
$html .= '</body></html>';

// Try to use Dompdf to create PDF
$pdfGenerated = false;
$filename = preg_replace('/[^a-z0-9]+/i', '-', strtolower($recipe['title'])) . '-recipe.pdf';

// If Dompdf is available (installed via Composer), use it
if (file_exists(__DIR__ . '/vendor/autoload.php')) {
    require_once __DIR__ . '/vendor/autoload.php';
    try {
        // Dompdf may require enabling support for remote resources or font directories.
        // We use Dompdf with default options.
        $options = new Dompdf\Options();
        $options->set('isRemoteEnabled', true);
        $options->set('defaultFont', 'DejaVu Sans'); // DejaVu supports many unicode chars

        $dompdf = new Dompdf\Dompdf($options);
        $dompdf->loadHtml($html);
        $dompdf->setPaper('A4', 'portrait');
        $dompdf->render();

        // Stream PDF to browser
        header('Content-Type: application/pdf');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        echo $dompdf->output();
        $pdfGenerated = true;
        exit;
    } catch (Exception $e) {
        error_log("Dompdf error in download_recipe.php: " . $e->getMessage());
        // fall through to fallback
    }
}

// Fallback: if Dompdf not available or failed, send HTML with suggestion to install Dompdf
if (!$pdfGenerated) {
    // Optionally, you can force a download of an HTML file if you prefer:
    header('Content-Type: text/html; charset=utf-8');
    echo '<!doctype html><html><head><meta charset="utf-8"><title>' . htmlspecialchars($recipe['title']) . '</title>' . $css . '</head><body>';
    echo '<div style="padding:12px;">';
    echo '<h1>' . $title . '</h1>';
    if ($imagePath) {
        $imgSrcRel = 'assets/images/recipes/' . htmlspecialchars($recipe['image']);
        echo '<img src="' . $imgSrcRel . '" class="recipe-image" alt="' . $title . '">';
    }
    echo '<h3>Ingredients</h3><div>' . $ingredients . '</div>';
    echo '<h3>Instructions</h3><div>' . $instructions . '</div>';
    echo '<hr>';
    echo '<p><strong>Note:</strong> PDF generator not available on the server. To enable PDF downloads please install <code>dompdf/dompdf</code> via Composer:<br>';
    echo '<code>composer require dompdf/dompdf</code></p>';
    echo '<p>After installing, the PDF will be generated and downloaded automatically.</p>';
    echo '</div></body></html>';
    exit;
}

